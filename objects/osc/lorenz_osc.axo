<objdefs appVersion="1.0.10">
   <obj.normal id="lorenz_osc" uuid="1b0ac9e2-ad25-410d-8484-fcfd74087c58">
      <sDescription>Lorenz chaotic attractor - oscillator

https://en.wikipedia.org/wiki/Lorenz_system</sDescription>
      <author>JLS</author>
      <license>BSD</license>
      <helpPatch>lorenz_osc.axh</helpPatch>
      <inlets>
         <bool32 name="active" description="active"/>
         <bool32.rising name="reset" description="reset"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="x" description="axis x"/>
         <frac32buffer.bipolar name="y" description="axis y"/>
         <frac32buffer.bipolar name="z" description="axis z"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[float x;
float tx;
float y;
float ty;
float z;
float tz;
float s;
float r;
float b;
float dt;
int res;]]></code.declaration>
      <code.init><![CDATA[x = 0.1;
y = 0.1;
z = 0.1;
s = 10.0;
r = 28.0;
b = 2.66;
dt = 0.005;
res = 0;]]></code.init>
      <code.srate><![CDATA[if (inlet_active>0) {

	tx = s * (y - x);
	ty = (r * x) - y - (x * z);
	tz = (x * y) - (b * z);

	x = x + tx * dt;
	y = y + ty * dt;
	z = z + tz * dt;

	outlet_x = (int32_t) (x * (1<<22));
	outlet_y = (int32_t) (y * (1<<22));
	outlet_z = (int32_t) (z * (1<<21));

}

else {

	outlet_x = 0;
	outlet_y = 0;
	outlet_z = 0;
	
}

if ((inlet_reset>0) && !res) {
	
   	res = 1;
   	x = 0.1;
	y = 0.1;
	z = 0.1;
	
} else if (!(inlet_reset>0)) res = 0;]]></code.srate>
   </obj.normal>
</objdefs>