<objdefs appVersion="1.0.10">
   <obj.normal id="chua_osc" uuid="473ca669-cd7a-4782-8fb6-bc6f08e38aab">
      <sDescription>Chua chaotic oscillator

https://en.wikipedia.org/wiki/Chua%27s_circuit</sDescription>
      <author>JLS</author>
      <license>BSD</license>
      <helpPatch>chua_osc.axh</helpPatch>
      <inlets>
         <bool32 name="active" description="active"/>
         <bool32.rising name="reset" description="reset"/>
      </inlets>
      <outlets>
         <frac32buffer.bipolar name="x" description="axis x"/>
         <frac32buffer.bipolar name="y" description="axis y"/>
         <frac32buffer.bipolar name="z" description="axis z"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[float x;
float tx;
float y;
float ty;
float z;
float tz;
float h;
float alpha;
float beta;
float a;
float b;
float dt;
int res;]]></code.declaration>
      <code.init><![CDATA[x = 0.5;
y = 0.25;
z = 0.125;
h = 0;
alpha = 15.6;
beta = 28.58;
a = -1.14286;
b = -0.714286;
dt = 0.005;
res = 0;]]></code.init>
      <code.srate><![CDATA[if (inlet_active>0) {

	h = (b * x) + (0.5 * (a - b) * (fabs(x+1) - fabs(x-1)));

	tx = alpha * (y - x - h);
	ty = x - y + z;
	tz = -beta * y;

	x = x + tx * dt;
	y = y + ty * dt;
	z = z + tz * dt;

	outlet_x = (int32_t) (x * (1<<25));
	outlet_y = (int32_t) (y * (1<<28));
	outlet_z = (int32_t) (z * (1<<25));

}

else {

	outlet_x = 0;
	outlet_y = 0;
	outlet_z = 0;
	
}

if ((inlet_reset>0) && !res) {
	
   	res = 1;
   	x = 0.5;
	y = 0.25;
	z = 0.125;
	h = 0;
	
} else if (!(inlet_reset>0)) res = 0;]]></code.srate>
   </obj.normal>
</objdefs>