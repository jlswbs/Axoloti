<objdefs appVersion="1.0.10">
   <obj.normal id="peuclid_seq" uuid="53d67376-ae6e-4626-bb0c-8ef70e878849">
      <sDescription>Pseudo euclidean sequencer</sDescription>
      <author>JLS</author>
      <license>BSD</license>
      <helpPatch>peuclid_seq.axh</helpPatch>
      <inlets>
         <bool32 name="active" description="active"/>
         <bool32.rising name="trig" description="trigger"/>
         <bool32.rising name="rst" description="reset"/>
      </inlets>
      <outlets>
         <frac32.positive name="wave" description="wave"/>
         <bool32 name="gate" description="gate"/>
      </outlets>
      <displays>
         <bool32 name="bit" noLabel="true"/>
      </displays>
      <params/>
      <attribs>
         <spinner name="steps" description="steps" MinValue="1" MaxValue="32" DefaultValue="3"/>
         <spinner name="hits" description="hits" MinValue="1" MaxValue="32" DefaultValue="8"/>
      </attribs>
      <code.declaration><![CDATA[int res;
int gate;
int bit;
int steps;
int hits;
int nx;
int ny;
int tx;
int ty;]]></code.declaration>
      <code.init><![CDATA[gate = 0;
res = 0;
bit = 0;
steps = attr_steps;
hits = attr_hits;
tx = 0;
ty = 0;]]></code.init>
      <code.krate><![CDATA[if (inlet_active>0) {

if ((inlet_trig>0) && !gate) {

	nx = tx;
	ny = ty;
       
	if (ny == 0) {

		tx = 1 + (GenerateRandomNumber() % steps);
		ty = hits;

		bit = 1;
          
	} else { 
          
		tx = ny;
		ty = nx % ny;

		bit = 0;
          
	} 
	
	gate = 1;

}

else if (!(inlet_trig>0)) gate = 0;

	outlet_gate = bit;

	disp_bit = bit;

	outlet_wave = nx * (1<<22);

}

else {

	outlet_wave = 0;
	outlet_gate = 0;
	
}

if ((inlet_rst>0) && !res) {

	tx = 0;
	ty = 0;
	bit = 0;	
	res = 1;
		
}

else if (!(inlet_rst>0)) res = 0;]]></code.krate>
   </obj.normal>
</objdefs>